    <controls:MetroWindow x:Class="Logazmic.LogViewerView"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:cal="http://www.caliburnproject.org"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:logazmic="clr-namespace:Logazmic"
                      xmlns:log="clr-namespace:Logazmic.Core.Log"
                      xmlns:viewModels="clr-namespace:Logazmic.ViewModels"
                      d:DataContext="{d:DesignInstance logazmic:LogViewerViewModel}"
                      mc:Ignorable="d"
                      AllowDrop="True" cal:Message.Attach="[Event Drop] = [Action OnDrop($eventArgs)];"
                      WindowState="Maximized" WindowStartupLocation="CenterScreen" Height="768" Width="1024">
    <controls:MetroWindow.Resources>
<!--        Styles to ovveride grid foreground-->
        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource MetroDataGridCell}">
            <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource FindAncestor,AncestorType=DataGridRow}}" />
        </Style>
        
        <Style TargetType="{x:Type DataGridRow}" BasedOn="{StaticResource MetroDataGridRow}">
            <Setter Property="Foreground" Value="{Binding LogLevel, Converter={StaticResource LogLevelToBrushConverter}}" />
        </Style>

        <Style x:Key="RectangleToolbar" TargetType="Rectangle">
            <Setter Property="Height" Value="20" />
            <Setter Property="Width" Value="20" />
            <Setter Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" />
        </Style>
        <!---->
        <Style TargetType="Button" x:Key="ToolBarButton" BasedOn="{StaticResource MetroCircleButtonStyle}">
            <Setter Property="Height" Value="50" />
            <Setter Property="Width" Value="50" />
            <Setter Property="Margin" Value="3,0,3,0" />
        </Style>
        <!---->
        <Style x:Key="TextBoxAsTextBlockStyle" TargetType="TextBox">
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
        </Style>
    </controls:MetroWindow.Resources>
    <DockPanel>
        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
            <Button Style="{StaticResource ToolBarButton}" cal:Message.Attach="Open">
              <Rectangle Style="{StaticResource RectangleToolbar}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_folder_open}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>
          
            <Button Style="{StaticResource ToolBarButton}" cal:Message.Attach="Clear">
              <Rectangle Style="{StaticResource RectangleToolbar}">
                    <Rectangle.OpacityMask>
                        <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_close}" />
                    </Rectangle.OpacityMask>
                </Rectangle>
            </Button>

            <ComboBox Margin="5,0,5,0" SelectedItem="{Binding Path=ActiveItem.MinLogLevel}" Width="120" VerticalAlignment="Center">
                <log:LogLevel>Trace</log:LogLevel>
                <log:LogLevel>Debug</log:LogLevel>
                <log:LogLevel>Info</log:LogLevel>
                <log:LogLevel>Warn</log:LogLevel>
                <log:LogLevel>Error</log:LogLevel>
                <log:LogLevel>Fatal</log:LogLevel>
            </ComboBox>

            <TextBox Text="{Binding Path=ActiveItem.SearchString, Delay=300, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="200"
                         controls:TextboxHelper.Watermark="Search"
                         Style="{DynamicResource SearchMetroTextBox}" VerticalAlignment="Center"/>
        </StackPanel>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="5*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid x:Name="Main">
                <TabControl x:Name="Items">
                    <TabControl.ContentTemplate>
                        <DataTemplate DataType="viewModels:LogPaneViewModel">
                            <DataGrid ItemsSource="{Binding Path=CollectionViewSource.View}" SelectedItem="{Binding Path=SelectedLogMessage}" AutoGenerateColumns="False"
                                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeRows="False"  SelectionMode="Single">
                                <DataGrid.Columns>
                                    <DataGridTextColumn IsReadOnly="True" Header="Time" Binding="{Binding Path=TimeStamp}" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Level" Binding="{Binding Path=LogLevel}" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Logger" Binding="{Binding Path=LastLoggerName}" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Thread" Binding="{Binding Path=ThreadName}" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Message" Width="*" Binding="{Binding Path=MessageSingleLine}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </DataTemplate>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Grid>

            <GridSplitter Grid.Row="0" Grid.Column="1" Width="3" ResizeDirection="Columns" HorizontalAlignment="Stretch" />

            <Grid x:Name="Tree" Grid.Row="0" Grid.Column="2" Grid.RowSpan="2">
                <TreeView Margin="5" VerticalAlignment="Stretch" ItemsSource="{Binding Path=ActiveItem.LogSourceRoot.Children}">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Children}" DataType="{x:Type viewModels:LogSource}">
                            <ContentPresenter Content="{Binding Name, Mode=OneTime}"/>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                            <Setter Property="IsExpanded" Value="True" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>

            <GridSplitter Grid.ColumnSpan="3" Grid.Row="1" Height="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />

            <Grid x:Name="Details" Grid.Row="2" Grid.ColumnSpan="3">
                <TextBox FontFamily="Courier New" Style="{StaticResource TextBoxAsTextBlockStyle}" VerticalAlignment="Top" Text="{Binding Path=ActiveItem.SelectedLogMessage.Message, Mode=OneWay}" Margin="10" TextWrapping="Wrap" />
            </Grid>
        </Grid>
    </DockPanel>
</controls:MetroWindow>